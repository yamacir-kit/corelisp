cmake_minimum_required(VERSION 3.0.2)

set(MAJOR_VERSION 1)
set(MAJOR_VERSION_COMMIT_OFFSET 53)

set(MINOR_VERSION 0)
set(MINOR_VERSION_COMMIT_OFFSET 0)

execute_process(COMMAND git log --oneline COMMAND wc --lines OUTPUT_VARIABLE TOTAL_COMMITS)
math(EXPR SUBMINOR_VERSION "${TOTAL_COMMITS} - ${MAJOR_VERSION_COMMIT_OFFSET} - ${MINOR_VERSION_COMMIT_OFFSET}")

project(lisp VERSION ${MAJOR_VERSION}.${MINOR_VERSION}.${SUBMINOR_VERSION} LANGUAGES CXX)

set(${PROJECT_NAME}_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
set(CMAKE_BUILD_TYPE release)
set(CMAKE_CXX_FLAGS "-Wall -Wextra -std=c++17 -O2 -s")
set(CMAKE_CXX_EXTENSIONS OFF)

find_package(Boost REQUIRED)

set(${PROJECT_NAME}_CONFIGURE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/configure)
if(EXISTS ${${PROJECT_NAME}_CONFIGURE_DIR}/README.md.cmake)
  configure_file(${${PROJECT_NAME}_CONFIGURE_DIR}/README.md.cmake ${CMAKE_CURRENT_SOURCE_DIR}/README.md)
endif()

include_directories(
  ${${PROJECT_NAME}_INCLUDE_DIR}
  ${Boost_INCLUDE_DIRS}
)

file(GLOB ${PROJECT_NAME}_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)
foreach(EACH IN LISTS ${PROJECT_NAME}_SOURCES)
  string(REGEX REPLACE "^/(.*/)*(.*).cpp$" "\\2" TARGET ${EACH})
  add_executable(${TARGET} ${EACH})
  target_link_libraries(${TARGET} ${Boost_LIBRARIES} gmp)
endforeach()

